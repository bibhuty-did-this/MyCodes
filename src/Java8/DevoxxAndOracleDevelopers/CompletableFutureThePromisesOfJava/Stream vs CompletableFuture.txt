Streams                         Completable Future
----------------------          ----------------------------

zero, one or more data          at most have one data or error

forEach - Consumer              thenAccept(just as accept)
          accept

map - Function                  thenApply(just as apply)
      apply

reduce                          thenCombine

flatMap                         thenCompose




one to one function
Stream<T>.map(f11) => Stream<R>

one to many function
Stream<T>.map(f1n) => Stream<List<R>>

Stream<T>.flatMap(f1n) => Stream<R>